/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import * as THREE from 'three'


export function Animation(props) {
  const Texture_Loader = new THREE.TextureLoader()
  const texture = Texture_Loader.load('/Model.png')
  const material = new THREE.MeshStandardMaterial({ map: texture })
  texture.flipY = false
  const group = useRef()
  const { nodes, animations } = useGLTF('/Animation.glb')
  const { actions } = useAnimations(animations, group)
  useEffect(() => {
    console.log(actions);
    actions.Waving.play()
  }, [])
  return (
    <group ref={group} {...props} dispose={null}>
      <group scale={[0.03, 0.03, 0.03]} position={[-0.25, -0.25, 1.35]} rotation={[0, -Math.PI * 0.1, 0]}>
        <group name="Scene">
          <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
            <primitive object={nodes.mixamorigHips} />
            <skinnedMesh name="Cube001"
              geometry={nodes.Cube001.geometry}
              material={material}
              skeleton={nodes.Cube001.skeleton} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/Animation.glb')
